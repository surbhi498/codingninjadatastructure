class Solution {
public:
    int numSquares(int n) {
       int count;
       int ans1=0; 
        for(int i=1;i<=n;i++)
        {
            
         int t = i*i;   
         if(t<n){
          int r=n%t;
          if((r==0)&&(t!=1))
          {
              
           int ans = 0; 
            count=0;   
            while(ans!=n)
            {
                
                
            ans+=t;    
            count++;    
            }    
           //return 1;   
           break;   
          }    
             
             
             
        else
          {
              
          if((ans1!=n)&&(ans1<n)){  
              
          ans1+=t;    
          count++;    
          }    
           else if((ans1!=n)&&(ans1>n)){
               
            ans1=0; 
            count=0; 
            int d = ans1-n;  
            int sqroot = sqrt(d);   
            i=(i-sqroot);
            continue;   
               
           }   
           else if(ans1==n){
               
           break;    
               
               
               
           }   
          }   
            
            
            
            
        }    
        
       // return count;
        }
        
/*class Solution {
public:
    bool isSquare(int n) {
        int sqroot = sqrt(n);
        return (n==(sqroot*sqroot));
    }
    int numSquares(int n) {
        while(n%4==0) n = n/4;
        if(n%8 == 7) return 4;
        if(isSquare(n)) return 1;
        for(int i=1;i*i<=n;i++) if(isSquare(n-i*i)) return 2;
        return 3;
    }*/



return count;
    }
    
};
